{"version":3,"sources":["logo.svg","utilities/socketConnection.js","utilities/canvasLoadAnimation.js","Cpu.js","Mem.js","Info.js","Widget.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","socket","io","connect","emit","drawCircle","canvas","currentLoad","context","getContext","clearRect","fillStyle","beginPath","arc","Math","PI","closePath","fill","lineWidth","strokeStyle","stroke","Cpu","props","document","querySelector","concat","cpuData","cpuWidgetId","cpuLoad","console","log","react_default","a","createElement","className","width","height","Mem","_props$memData","memData","totalMem","memUseage","usedMem","freeMem","memWidgetId","totalMemInGB","freeMemInGB","floor","class","Info","infoData","osType","moment","duration","upTime","humanize","cpuModel","cpuNumCores","cpuSpeed","Widget","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this$props$data","data","numCores","macA","isActive","cpu","mem","info","notActiveDiv","src_Cpu","src_Mem","src_Info","Component","App","performanceData","_this2","on","currentState","objectSpread","setState","widgets","entries","forEach","_ref","_ref2","slicedToArray","key","value","push","src_Widget","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.555abda1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import io from 'socket.io-client';\nlet socket = io.connect('http://localhost:8181');\n\nsocket.emit('clientAuth','uihjt3refvdsadf')\n// console.log(socket)\nexport default socket;","function drawCircle(canvas,currentLoad){\n    if(canvas){\n        let context = canvas.getContext('2d');\n        // Draw Inner Circle\n        context.clearRect(0,0,500,500)\n        context.fillStyle = \"#ccc\";\n        context.beginPath();\n        context.arc(100,100,90,Math.PI*0,Math.PI*2);\n        context.closePath();\n        context.fill();\n\n        // Draw the outter line\n        // 10px wide line\n        context.lineWidth = 10;\n        if(currentLoad < 20){\n            context.strokeStyle = '#00ff00';\n        }else if(currentLoad < 40){\n            context.strokeStyle = '#337ab7';\n        }else if(currentLoad < 60){\n            context.strokeStyle = '#f0ad4e';\n        }else{\n            context.strokeStyle = '#d9534f';\n        }\n        context.beginPath();\n        context.arc(100,100,95,Math.PI*1.5,(Math.PI * 2 * currentLoad/100) + Math.PI*1.5);\n        context.stroke();\n    }\n}\n\nexport default drawCircle;","import React from 'react';\nimport drawCircle from './utilities/canvasLoadAnimation';\n\nfunction Cpu(props){\n    const canvas = document.querySelector(`.${props.cpuData.cpuWidgetId}`);\n    drawCircle(canvas,props.cpuData.cpuLoad);\n    console.log(props);\n    return(\n       <div className=\"col-sm-3 cpu\">\n        <h3>CPU load</h3>\n        <div className=\"canvas-wrapper\">\n            <canvas className={props.cpuData.cpuWidgetId} width=\"200\" height=\"200\"></canvas>\n            <div className=\"cpu-text\">{props.cpuData.cpuLoad}%</div>\n        </div>\n       </div>\n    )\n}\n\nexport default Cpu;","import React from 'react';\nimport drawCircle from './utilities/canvasLoadAnimation';\n\nfunction Mem(props){\n\n    console.log(props);\n    const {totalMem, usedMem, memUseage,freeMem} = props.memData;\n    const canvas = document.querySelector(`.${props.memData.memWidgetId}`);\n    drawCircle(canvas,memUseage*100);\n    console.log(memUseage)\n    const totalMemInGB = (totalMem/1073741824*100)/100;\n    const freeMemInGB = Math.floor(freeMem/1073741824*100)/100;\n    return(\n        <div class=\"col-sm-3 mem\">\n            <h3>Memory Useage</h3>\n            <div className=\"canvas-wrapper\">\n                <canvas className={props.memData.memWidgetId} width=\"200\" height=\"200\"></canvas>\n                <div className=\"mem-text\">\n                    {memUseage*100}%\n                </div>\n            </div>\n            <div>\n                Total Memory: {totalMemInGB}gb\n            </div>\n            <div>\n                Free Memory: {freeMemInGB}gb\n            </div>\n        </div>\n        \n    )\n}\n\nexport default Mem;","import React from 'react';\nimport moment from 'moment';\n\nfunction Info(props){\n    return (\n        <div className=\"col-sm-3 col-sm-offset-1 cpu-info\">\n          <h3>Operating System</h3>\n          <div className=\"widget-text\">{props.infoData.osType}</div>\n          <h3>Time Online</h3>\n          <div className=\"widget-text\">{moment.duration(props.infoData.upTime).humanize()}</div>\n          <h3>Processor information</h3>\n          <div className=\"widget-text\"><strong>Type:</strong> {props.infoData.cpuModel}</div>\n          <div className=\"widget-text\"><strong>Number of Cores:</strong> {props.infoData.cpuNumCores}</div>\n          <div className=\"widget-text\"><strong>Clock Speed:</strong> {props.infoData.cpuSpeed}</div>\n        </div>\n    );\n}\n\nexport default(Info);","import React, {Component} from 'react';\nimport Cpu from './Cpu';\nimport Mem from './Mem';\nimport Info from './Info';\nimport './widget.css';\n\nclass Widget extends Component{\n    constructor(){\n        super();\n        this.state = {};\n    }\n\n    render(){\n        const { freeMem,totalMem,usedMem,memUseage,osType,upTime,cpuModel,numCores,cpuSpeed,cpuLoad, macA, isActive } = this.props.data;\n\n        const cpuWidgetId = `cpu-widget-${macA}`;\n        const memWidgetId = `mem-widget-${macA}`;\n\n        const cpu = {cpuLoad, cpuWidgetId}\n        const mem = {totalMem, usedMem, memUseage,freeMem, memWidgetId}\n        const info = {macA,osType,upTime,cpuModel,numCores,cpuSpeed}\n\n        let notActiveDiv = '';\n        if(!isActive){\n            notActiveDiv = <div className=\"not-active\">Offline</div>\n        }\n\n\n\n        return(\n            <div className=\"widget col-sm-12\">\n                {notActiveDiv}\n                <Cpu cpuData = {cpu} />\n                <Mem memData = {mem} />\n                <Info infoData = {info} />\n            </div>\n        )\n    }\n}\nexport default Widget;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport socket from './utilities/socketConnection';\nimport Widget from './Widget';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      performanceData: {}\n    }\n  }\n\n  componentDidMount(){\n    socket.on('data',(data)=>{\n      // inside this callback, we just got some new data!\n      // let's update state so we can \n      // re-render App --> Widget --> CPU/Mem/Info\n      // we need to make a copy of current state\n      // so we can mutate it!\n      const currentState = ({...this.state.performanceData});\n      // const currentState = Object.assign(this.state.performanceData,{})\n      // currentState is an object! Not an array!\n      // the reason for this is so we can use the machine's\n      // MacA as it's property\n      currentState[data.macA] = data;     \n      this.setState({\n        performanceData: currentState\n      })\n    })\n  }\n\n  render() {\n    console.log(this.state.performanceData);\n    let widgets = [];\n    const data = this.state.performanceData;\n    // grab each machine, by property, from data\n    Object.entries(data).forEach(([key,value])=>{\n      widgets.push(<Widget key={key} data={value} />)\n    })\n    return (\n      <div className=\"App\">\n        {widgets}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}